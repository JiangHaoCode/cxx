mysql
一、导出数据库用mysqldump命令（注意mysql的安装路径，即此命令的路径）：
1、导出数据和表结构：
mysqldump -u用户名 -p密码 数据库名 > 数据库名.sql
#/usr/local/mysql/bin/   mysqldump -uroot -p abc > abc.sql
敲回车后会提示输入密码

2、只导出表结构
mysqldump -u用户名 -p密码 -d 数据库名 > 数据库名.sql
#/usr/local/mysql/bin/   mysqldump -uroot -p -d abc > abc.sql

注：/usr/local/mysql/bin/  --->  mysql的data目录
docker 导出数据
docker exec -it  mysql_server【docker容器名称/ID】 mysqldump -uroot -p123456【数据库密码】 test_db【数据库名称】 > /opt/sql_bak/test_db.sql【导出表格路径】


二、导入数据库
1、首先建空数据库
mysql>create database abc;

2、导入数据库
方法一：
（1）选择数据库
mysql>use abc;
（2）设置数据库编码
mysql>set names utf8;
（3）导入数据（注意sql文件的路径）
mysql>source /home/abc/abc.sql;
方法二：
mysql -u用户名 -p密码 数据库名 < 数据库名.sql
#mysql -uabc_f -p abc < abc.sql\

docker 导入
1. 先将文件导入到容器
#docker cp **.sql 【容器名】:/root/
进入容器
#docker exec -ti 【容器名/ID】sh
将文件导入数据库
# mysql -uroot -p 【数据库名】 < ***.sql

2. docker exec -i  mysql_server【docker容器名称/ID】 mysqltest_db_copy【数据库名称】 < /opt/sql_bak/test_db.sql【本地数据表路径】

mysql S U I D

update
UPDATE table_name SET field1=new-value1, field2=new-value2
[WHERE Clause]

INSERT INTO table_name ( field1, field2,...fieldN )
                       VALUES
                       ( value1, value2,...valueN );

SELECT column_name,column_name
FROM table_name
[WHERE Clause]
[LIMIT N][ OFFSET M]


DELETE FROM table_name [WHERE Clause]


SELECT DISTINCT country FROM Websites; SELECT DISTINCT 也就是去掉 列重复值


更改密码
select Host,User from user \G; //查
UPDATE user SET Password = PASSWORD('newpass') WHERE user = 'root'; // 更新
 FLUSH PRIVILEGES; // 刷新

 alter database qmPlus default character set utf8; //更改数据库的字符
alter table t1 charset=utf8mb4; 更改表的字符集
show full columns from user; 查看表的字段


create database if not exists dbname default character set utf8mb4 collate utf8mb4_general_ci;

// 基础语法

1、创建表格时添加： create table tablename(id int auto_increment primary key,...) 
2、创建表格后添加： alter table tablename add id int auto_increment primary key
3、设置主键：alter table tablename add primary key(field_name);
4、重命名表： alter table table_old_name rename table_new_name;
5、改变字段的类型：alter table tableName modify field_name field_type;
6、重命名字段：alter table tableName change old_field_name new_field_name new_field_type;
7、删除字段：alter table tableName drop column field_name;
8、增加一个新字段：alter table tableName add new_field_name field_type;   
                                  alter table tableName add new_field_name field_type not null default '0';
9、新增一个字段，默认值为0，非空，自动增长，主键：alter table tabelname add new_field_name field_type default 0 not null   auto_increment ,add primary key (new_field_name);   

创建一个表
create table pre_common_usernotes (id int(8) not null primary key auto_increment, user_id char(20) not null, order_id char(20) not null, pub_id char(20) not null, ad_name char(20) , ad_id int(8), device char(20) , system_name char(20), channel int(8), price double(16,2), point int(8), ts int(10) not null default'0', sign char(30));

创建数据库并设置数据库默认字段编码格式
create database database_name default charset utf8 collate utf8_unicode_ci;

设置 auto_increment字段 的最小值
ALETER TABLE table_name AUTO_INCREMENT=100000

create user 'tux'@'localhost' identified by 'really_securd_passwordcre'

//
MySQL报错Lost connection to MySQL server at ‘reading initial communication packet’的解决办法
mysql 限制了外网的连接

GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456';
FLUSH PRIVILEGES;

rename table XXXXX to YYYYY //重命名表

BEGIN 开始一个事务
ROLLBACK 事务回滚
COMMIT 事务确认

SET AUTOCOMMIT=0 禁止自动提交
SET AUTOCOMMIT=1 开启自动提交

事务
BEGIN 或 START TRANSACTION 显式地开启一个事务；

COMMIT 也可以使用 COMMIT WORK，不过二者是等价的。COMMIT 会提交事务，并使已对数据库进行的所有修改成为永久性的；

ROLLBACK 也可以使用 ROLLBACK WORK，不过二者是等价的。回滚会结束用户的事务，并撤销正在进行的所有未提交的修改；

SAVEPOINT identifier，SAVEPOINT 允许在事务中创建一个保存点，一个事务中可以有多个 SAVEPOINT；

RELEASE SAVEPOINT identifier 删除一个事务的保存点，当没有指定的保存点时，执行该语句会抛出一个异常；

ROLLBACK TO identifier 把事务回滚到标记点；

SET TRANSACTION 用来设置事务的隔离级别。InnoDB 存储引擎提供事务的隔离级别有READ UNCOMMITTED、READ COMMITTED、REPEATABLE READ 和 SERIALIZABLE。


// 使用ALTER 命令添加和删除索引 (drop 删除索引)
ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。
ALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。
ALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。
ALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。


运算符	描述
=	等于
<> !=	不等于。注释：在 SQL 的一些版本中，该操作符可被写成 !=
>	大于
<	小于
>=	大于等于
<=	小于等于
BETWEEN	在某个范围内
LIKE	搜索某种模式
IN	指定针对某个列的多个可能值

CREATE DATABASE `mydb` CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci; // 创建库 和 表的编码
更改数据库编码：ALTER DATABASE caitu99 CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
更改表编码：ALTER TABLE TABLE_NAME CONVERT TO CHARACTER SET utf8mb4 COLLATEutf8mb4_general_ci; \\
SHOW VARIABLES WHERE Variable_name LIKE 'character_set_%' OR Variable_name LIKE 'collation%'; // 查看系统变量


修改MySQL配置文件
修改mysql配置文件my.cnf（windows为my.ini） 
my.cnf一般在etc/mysql/my.cnf位置。找到后请在以下三部分里添加如下内容： 
[client] 
default-character-set = utf8mb4 
[mysql] 
default-character-set = utf8mb4 
[mysqld] 
character-set-client-handshake = FALSE 
character-set-server = utf8mb4 
collation-server = utf8mb4_unicode_ci 
init_connect='SET NAMES utf8mb4'


查询 select

select distinct collumn from tabelname; // 去除字段重复

INNER JOIN：如果表中有至少一个匹配，则返回行
LEFT JOIN：即使右表中没有匹配，也从左表返回所有的行
RIGHT JOIN：即使左表中没有匹配，也从右表返回所有的行
FULL JOIN：只要其中一个表中存在匹配，则返回行


// 远程登陆的用户
首先登陆到mysql后，进入到mysql数据库：use mysql;

修改用户密码和密码的模式为以前的那种密码加密模式：ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '123';

查看所用的用户以及允许访问的地址和加密方式：select user,host,plugin from user;

创建一个用于远程登陆的用户remoteroot,密码123456：CREATE USER 'remoteroot'@'%' IDENTIFIED BY '123456';

给上面创建的用户授予所有权限：GRANT ALL ON *.* TO 'remoteroot'@'%';

刷新保存（执行完这句后上面的更改才能生效）：FLUSH PRIVILEGES;

4.然后就可以用navicat链接这个mysql了，remoteroot 123456


SELECT - 从数据库中提取数据
UPDATE - 更新数据库中的数据
DELETE - 从数据库中删除数据
INSERT INTO - 向数据库中插入新数据
CREATE DATABASE - 创建新数据库
ALTER DATABASE - 修改数据库
CREATE TABLE - 创建新表
ALTER TABLE - 变更（改变）数据库表
DROP TABLE - 删除表
CREATE INDEX - 创建索引（搜索键）
DROP INDEX - 删除索引

unique // 唯一约束
foreign key (字段) references 表(字段) // 外键


分享在面试中经常被问到的 MySQL 题目，本文总结了面试中的经典问题。
1.主键（primary key）和候选键（candidate key）有什么区别？
候选键 - 候选键可以是任何列或可以作为数据库中唯一键的列组合。一张表中可以有多个候选键。每个候选键都可以作为主键。
主键 - 主键是唯一标识记录的列或列组合。只有一个候选键可以是主键。
2. NOW() 和 CURRENT_DATE() 有什么区别？
NOW () 命令用于以小时、分钟和秒显示当前年、月、日。
CURRENT_DATE() 仅显示当前年、月和日期。
3. MySQL 表中允许多少个触发器？
以下是 MySQL 表中允许的触发器。
插入前

插入后

更新前

更新后

删除前

删除后

4.我们可以为索引创建多少列？
16

5. 如何将数据从一张表复制到另一张表？
NSERT INTO table2 (id,uid,changed,status,assign_status) SELECT id,uid,now(),'Pending','Assigned' FROM table1

6.如何在不复制数据的情况下复制表？
CREATE TABLE users_bck SELECT * FROM users WHERE 1=0;

7.什么是 MySQL？
MySQL 是一个免费提供的开源关系数据库管理系统 (RDBMS)，它使用结构化查询语言 (SQL)。

SQL 是用于在数据库中添加、访问和管理内容的最流行的语言。它以其快速处理、久经考验的可靠性、易用性和使用灵活性而著称。MySQL 是几乎每个开源 PHP 应用程序的重要组成部分。基于 PHP 和 MySQL 的脚本的好例子是 WordPress、Joomla、Magento 和 Drupal。

8.列出MySQL的特点？
关系数据库管理系统（RDBMS）：MySQL 是一个关系数据库管理系统。

易于使用：MySQL 易于使用。您只需掌握 SQL 的基本知识。只需几个简单的 SQL 语句，您就可以构建 MySQL 并与之交互。

它是安全的：MySQL 包含一个可靠的数据安全层，可以保护敏感数据免受入侵者的侵害。密码在 MySQL 中是加密的。

它是可扩展的：MySQL 可以处理几乎任何数量的数据，多达 5000 万行或更多。默认文件大小限制约为 4 GB。但是，您可以将此数字增加到 8 TB 数据的理论限制。

在许多操作系统上兼容：MySQL 兼容在许多操作系统上运行。

允许回滚：MySQL 允许事务回滚、提交和崩溃恢复。

高性能：由于其独特的存储引擎架构，MySQL 更快、更可靠、更便宜。

高灵活性：MySQL 支持大量的嵌入式应用程序，这使得 MySQL 非常灵活。

高生产力：MySQL 使用触发器、存储过程和视图，允许开发人员提供更高的生产力。

9. transaction 和 ACID 属性是什么意思？
事务是工作的逻辑单元，应该执行所有步骤或不执行任何步骤。ACID 是原子性、一致性、隔离性和持久性的缩写，它们是任何事务的属性。

10. 什么是堆表？
堆是没有聚集索引的表。可以在存储为堆的表上创建一个或多个非聚集索引。数据存储在堆中而不指定顺序。通常数据最初是按照行插入表中的顺序存储的，但是数据库引擎可以在堆中移动数据以有效地存储行；因此无法预测数据顺序。要保证从堆返回的行的顺序，您必须使用 ORDER BY 子句。要指定行的存储顺序，请在表上创建聚集索引，使表不是堆。

11. 聚集表与堆表
堆表

数据不按任何特定顺序存储

具体数据不能快速检索，除非也有非聚集索引

数据页未链接，因此顺序访问需要回溯到索引分配映射 (IAM) 页

由于没有聚集索引，因此不需要额外的时间来维护索引

由于没有聚集索引，所以不需要额外的空间来存储聚集索引树

这些表在 sys.indexes 目录视图中的 index_id 值为 0

集群表

数据按照聚集索引键的顺序存储

如果查询使用索引列，可以根据聚集索引键快速检索数据

链接数据页以实现更快的顺序访问

需要额外的时间来维护基于 INSERTS、UPDATES 和 DELETES 的聚集索引

需要额外的空间来存储聚集索引树

这些表在 sys.indexes 目录视图中的 index_id 值为 1

12. 区分 FLOAT 和 DOUBLE？
以下是 FLOAT 和 DOUBLE 的区别：

浮点数以八位精度存储在 FLOAT 中，它有四个字节。

浮点数以 18 位精度存储在 DOUBLE 中，它有 8 个字节。

13. 使用 CREATE 语句可以创建哪些对象？
以下对象是使用 CREATE 语句创建的：

DATABASE

EVENT

FUNCTION

INDEX

PROCEDURE

TABLE

TRIGGER

USER

VIEW

14.主键和唯一键有什么区别
虽然两者都用于强制定义的列的唯一性，但主键会创建聚集索引，而唯一键会在列上创建非聚集索引。主键不允许'NULL'，但唯一键允许它。